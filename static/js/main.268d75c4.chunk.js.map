{"version":3,"sources":["logo.svg","Component/Home.js","api/bootapi.js","Component/Courses.js","Component/AllCourses.js","Component/AddCourses.js","Component/Header.js","Component/MenuOption.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Home","useEffect","document","title","Jumbotron","className","Container","Button","color","href","base_url","Courses","course","update","Card","CardBody","CardSubtitle","CardText","description","onClick","id","axios","delete","then","response","toast","success","error","AllCourses","get","console","log","data","position","setCourses","useState","courses","updateCourse","filter","c","length","map","item","key","AddCourse","setCourse","postDatatoServer","post","Form","onSubmit","e","preventDefault","FormGroup","for","Input","type","placeholder","name","required","onChange","target","value","style","height","Header","Menus","ListGroup","tag","to","action","App","Row","Col","md","path","component","exact","Boolean","window","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.268d75c4.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, { useState, useEffect } from 'react';\nimport { Jumbotron,Button,Container} from \"reactstrap\";\n\nconst Home = () =>\n{\n    useEffect(() => {\n        document.title=\"Home\"\n    })\nreturn(\n    <div>\n       <Jumbotron className=\"text-center bg-success\">\n           <h1>\n              This is my React Application\n           </h1>\n           <Container>\n               <Button color=\"primary\" href=\"/add-course\">Start Using</Button>\n           </Container>\n       </Jumbotron>\n    </div>\n)\n};\nexport default Home;","const base_url=\"http://localhost/8081\";\nexport default base_url;","import React from \"react\";\nimport {\n  Card, CardImg, CardText, CardBody, CardLink,\n  CardTitle, CardSubtitle, Container, Button\n} from \"reactstrap\";\nimport axios from \"axios\";\nimport base_url from \"./../api/bootapi\"\nimport { toast } from \"react-toastify\";\n\nconst Courses = ({course,update}) =>\n{\n\n    const deleteCourse=(id)=>\n    {\n        axios.delete(`${base_url}/Courses/${id}`).then(\n            (response)=>{\n             toast.success(\"Course has been deleted\");\n             update(id);\n            },\n            (error)=>{\n              toast.success(\"Server Down\");\n            }\n        )\n    };\n    return(\n        <Card className=\"text-center\">\n            <CardBody >\n                <CardSubtitle className=\"font-weight-bold\">{course.title}</CardSubtitle>\n                <CardText>{course.description}</CardText>\n            </CardBody>\n            <Container className=\"text-center\">\n                <Button color= \"danger\" onClick={()=>{\n                    deleteCourse(course.id);\n                }\n            }>Delete</Button>\n                <Button color= \"warning m1-8\">Update</Button>\n            </Container>\n        </Card>\n    );\n};\nexport default Courses;","import React, { useState ,useEffect} from 'react';\nimport Courses from \"./Courses\";\nimport { Button } from 'reactstrap';\nimport base_url from \"./../api/bootapi\"\nimport axios from \"axios\";\nimport { toast } from 'react-toastify';\nconst AllCourses =()=>\n{\n    useEffect(()=>{\n        document.title=\"All Courses\";\n    },[]);\n\n    //function to call server\n    const getAllCoursesFromServer =()=>\n    {\n        axios.get(`${base_url}/getCourses`).then(\n            (response)=>\n            {\n                console.log(response);\n                console.log(response.data);\n                toast.success(\"Courses has been loaded\",{\n                    position:\"bottom-center\",\n                });\n                setCourses(response.data);\n            },\n            (error)=>\n            {\n                console.log(\"hi\");\n                console.log(error);\n                toast.error(\"Server down\",{\n                    position:\"bottom-center\",\n                });\n            }\n        );\n    };\n\n    //load courses from server\n    useEffect(()=>{\n        getAllCoursesFromServer();\n    },[]);\n   \n    const [courses,setCourses]=useState([]);\n\n    const updateCourse=(id)=>{\n        setCourses(courses.filter((c)=> c.id !=id));\n    };\nreturn(\n    <div>\n        {/* <Button\n        onClick={() => {\n            console.log(\"hi\");\n            setCourses([\n                ...courses,\n                {\n                    title: \"Angular Course\",\n                    description:\"this is for demo\",\n                }\n            ]);\n        }}>Test</Button> */}\n        <h1>All Courses</h1>\n        <p>List of Courses are as follows:</p>\n        {\n\n            courses.length>0? courses.map((item) =>(\n               < Courses key={item.id} course ={item} update={updateCourse}/>\n            )): \"No Courses\"\n        }\n    </div>\n    );\n};\nexport default AllCourses;\n","import React, { Fragment } from 'react';\nimport { useState ,useEffect} from 'react';\nimport { FormGroup, Label, Input,Form, Container, Button } from 'reactstrap';\nimport axios from 'axios';\nimport base_url from \"./../api/bootapi\";\nimport { toast } from 'react-toastify';\n\nconst AddCourse =() =>\n{\n  useEffect(() => {\n    document.title=\"Add Course\";\n})\nconst [course,setCourse]=useState([]);\n  const handleForm=(e)=>{\n  console.log(course);\n  postDatatoServer(course);\n  e.preventDefault();\n  }\n\n  //function to post data to server\n  const postDatatoServer=(data)=>{\n    axios.post(`${base_url}/Courses`).then(\n      (response)=>{\n       console.log(response);\n       toast.success(\"Course has been added\");\n       setCourse({id: \"\", title: \"\", description: \"\"});\n    },\n    (error)=>\n    {\n        console.log(error);\n        toast.error(\"Server Down\",{position:\"bottom-center\"});\n        setCourse({id: \"\", title: \"\", description: \"\"});\n    }\n    );\n  };\n    return <Fragment>\n        <h1 className=\"text-center\">Fill Course Detail</h1>\n        <Form onSubmit={handleForm}>\n            <FormGroup>\n          <label for=\"courseId\">Course Id </label>\n              <Input type=\"text\" placeholder=\"Enter Course Id\" name=\"courseid\" \n              id=\"courseId\" \n              required\n              onChange={(e)=>{\n                setCourse({...course,id:e.target.value});\n              }}/>\n         \n            </FormGroup>\n            <FormGroup>\n          <label for=\"title\">Title</label>\n              <Input type=\"text\" placeholder=\"Enter title\" required name=\"title\" id=\"title\" \n              onChange={(e)=>{\n                setCourse({...course,title:e.target.value});\n              }}/>\n         \n            </FormGroup>\n            <FormGroup>\n          <label for=\"description\">Description </label>\n              <Input type=\"textarea\" placeholder=\"Enter description\" required name=\"description\" id=\"description\" style={{height:100}}\n              onChange={(e)=>{\n                setCourse({...course,description:e.target.value});\n              }}/>\n         \n            </FormGroup>\n          <Container className=\"text-center\">\n            <Button type=\"submit\" color=\"success\">Add Course</Button>\n            <Button type=\"reset\" color=\"warning ml-2\">Clear</Button>\n          </Container>\n        </Form>\n    </Fragment>\n}\n\nexport default AddCourse;","import React from \"react\";\nimport { Card,CardBody } from \"reactstrap\";\n\n\nfunction Header ()\n{\n    return(\n        <div>\n            <Card className=\"my-3 bg-warning\">\n            <CardBody>\n            <h1 className=\"text-center my-3\">Welcome to Courses Application</h1>\n            </CardBody>\n            </Card>\n            {/* <p>\n                This is specified for courses Application\n            </p> */}\n        </div>\n    );\n}\nexport default Header;","import React from \"react\";\nimport { ListGroup, ListGroupItem } from \"reactstrap\";\nimport { Link } from \"react-router-dom\";\n\nconst Menus =()=>\n{\n\n    return(\n        <ListGroup>\n            <Link className=\"list-group-item list-group-item-action\" tag=\"a\"  to =\"/\" action>Home</Link>\n            <Link className=\"list-group-item list-group-item-action\" tag=\"a\"  to =\"/add-course\" action>Add Course</Link>\n            <Link className=\"list-group-item list-group-item-action\" tag=\"a\"  to =\"/view-courses\" action>View Courses</Link>\n            <Link className=\"list-group-item list-group-item-action\" tag=\"a\"  to =\"#!\" action>About</Link>\n            <Link className=\"list-group-item list-group-item-action\" tag=\"a\"  to =\"#!\" action>Contact</Link>\n        </ListGroup>\n\n    );\n}\nexport default Menus;","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport { Button, Container, Row ,Col, Card, CardBody}  from \"reactstrap\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport Home from \"./Component/Home\";\nimport Courses from \"./Component/Courses\";\nimport AllCourses from \"./Component/AllCourses\";\nimport AddCourse from \"./Component/AddCourses\";\nimport Header from './Component/Header';\nimport Menus from './Component/MenuOption';\nimport {BrowserRouter as Router,Route,Link} from \"react-router-dom\";\n\n\n  function App()\n  {\n    const btnHandle = () => {\n    toast.success(\"done\" ,{\n      position: \"bottom-center\",\n    });\n  };\n  return (\n    <Router>\n    <div>\n      <ToastContainer />\n  <Header />\n  \n  <Container>\n    \n  <Row>\n    <Col md={4}>\n    <Menus />\n     \n    </Col>\n  \n    <Col md={8}>\n     <Route path=\"/\" component={Home} exact />\n     <Route path=\"/add-course\" component={AddCourse} exact/>\n     <Route path=\"/view-courses\" component={AllCourses} exact/>\n    </Col>\n\n  </Row>\n \n  </Container>\n  </div>\n  </Router>\n  );\n  }\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n      // [::1] is the IPv6 localhost address.\n      window.location.hostname === '[::1]' ||\n      // 127.0.0.0/8 are considered localhost for IPv4.\n      window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n      )\n  );\n  \n  export function register(config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n      // The URL constructor is available in all browsers that support SW.\n      const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n      if (publicUrl.origin !== window.location.origin) {\n        // Our service worker won't work if PUBLIC_URL is on a different origin\n        // from what our page is served on. This might happen if a CDN is used to\n        // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n        return;\n      }\n  \n      window.addEventListener('load', () => {\n        const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n  \n        if (isLocalhost) {\n          // This is running on localhost. Let's check if a service worker still exists or not.\n          checkValidServiceWorker(swUrl, config);\n  \n          // Add some additional logging to localhost, pointing developers to the\n          // service worker/PWA documentation.\n          navigator.serviceWorker.ready.then(() => {\n            console.log(\n              'This web app is being served cache-first by a service ' +\n                'worker. To learn more, visit https://bit.ly/CRA-PWA'\n            );\n          });\n        } else {\n          // Is not localhost. Just register service worker\n          registerValidSW(swUrl, config);\n        }\n      });\n    }\n  }\n  \n  function registerValidSW(swUrl, config) {\n    navigator.serviceWorker\n      .register(swUrl)\n      .then(registration => {\n        registration.onupdatefound = () => {\n          const installingWorker = registration.installing;\n          if (installingWorker == null) {\n            return;\n          }\n          installingWorker.onstatechange = () => {\n            if (installingWorker.state === 'installed') {\n              if (navigator.serviceWorker.controller) {\n                // At this point, the updated precached content has been fetched,\n                // but the previous service worker will still serve the older\n                // content until all client tabs are closed.\n                console.log(\n                  'New content is available and will be used when all ' +\n                    'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n                );\n  \n                // Execute callback\n                if (config && config.onUpdate) {\n                  config.onUpdate(registration);\n                }\n              } else {\n                // At this point, everything has been precached.\n                // It's the perfect time to display a\n                // \"Content is cached for offline use.\" message.\n                console.log('Content is cached for offline use.');\n  \n                // Execute callback\n                if (config && config.onSuccess) {\n                  config.onSuccess(registration);\n                }\n              }\n            }\n          };\n        };\n      })\n      .catch(error => {\n        console.error('Error during service worker registration:', error);\n      });\n  }\n  \n  function checkValidServiceWorker(swUrl, config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl, {\n      headers: { 'Service-Worker': 'script' },\n    })\n      .then(response => {\n        // Ensure service worker exists, and that we really are getting a JS file.\n        const contentType = response.headers.get('content-type');\n        if (\n          response.status === 404 ||\n          (contentType != null && contentType.indexOf('javascript') === -1)\n        ) {\n          // No service worker found. Probably a different app. Reload the page.\n          navigator.serviceWorker.ready.then(registration => {\n            registration.unregister().then(() => {\n              window.location.reload();\n            });\n          });\n        } else {\n          // Service worker found. Proceed as normal.\n          registerValidSW(swUrl, config);\n        }\n      })\n      .catch(() => {\n        console.log(\n          'No internet connection found. App is running in offline mode.'\n        );\n      });\n  }\n  \n  export function unregister() {\n    if ('serviceWorker' in navigator) {\n      navigator.serviceWorker.ready\n        .then(registration => {\n          registration.unregister();\n        })\n        .catch(error => {\n          console.error(error.message);\n        });\n    }\n  }\n  ","import React from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'react-toastify/dist/ReactToastify.css';\n\nReactDOM.render(<App />,document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}